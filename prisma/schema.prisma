datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  ADMIN
}

enum PostStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  clerkId       String    @unique
  email         String    @unique
  username      String?
  role          Role      @default(USER)
  posts         Post[]
  profile       Profile?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Profile {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  user          User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String    @unique @db.ObjectId
  bio          String?
  avatarUrl    String?
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

model Post {
  id            String          @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  slug          String          @unique
  content       String
  excerpt       String?
  featuredImage String?
  status        PostStatus      @default(DRAFT)
  featured      Boolean         @default(false)
  author        User           @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId      String         @db.ObjectId
  categoryIds   String[]        @db.ObjectId
  categories    Category[]      @relation(fields: [categoryIds], references: [id])
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Category {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String    @unique
  slug          String    @unique
  description   String?
  postIds       String[]  @db.ObjectId
  posts         Post[]    @relation(fields: [postIds], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Contact {
  id        String   @id @default(cuid()) @map("_id")
  type      String   // "individual" or "company"
  name      String
  email     String
  phone     String?
  company   String?
  position  String?
  message   String
  createdAt DateTime @default(now())
}
